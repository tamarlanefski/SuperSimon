{"version":3,"file":"react-konva-Bv-yRLbE.js","sources":["../../node_modules/react-konva/es/makeUpdates.js","../../node_modules/react-konva/es/ReactKonvaHostConfig.js","../../node_modules/react-konva/es/ReactKonvaCore.js"],"sourcesContent":["import { Konva } from 'konva/lib/Global.js';\nconst propsToSkip = {\n    children: true,\n    ref: true,\n    key: true,\n    style: true,\n    forwardedRef: true,\n    unstable_applyCache: true,\n    unstable_applyDrawHitFromCache: true,\n};\nlet zIndexWarningShowed = false;\nlet dragWarningShowed = false;\nexport const EVENTS_NAMESPACE = '.react-konva-event';\nlet useStrictMode = false;\nexport function toggleStrictMode(value) {\n    useStrictMode = value;\n}\nconst DRAGGABLE_WARNING = `ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\nConsider to add onDragMove or onDragEnd events.\nFor more info see: https://github.com/konvajs/react-konva/issues/256\n`;\nconst Z_INDEX_WARNING = `ReactKonva: You are using \"zIndex\" attribute for a Konva node.\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\nFor more info see: https://github.com/konvajs/react-konva/issues/194\n`;\nconst EMPTY_PROPS = {};\nexport function applyNodeProps(instance, props, oldProps = EMPTY_PROPS) {\n    // don't use zIndex in react-konva\n    if (!zIndexWarningShowed && 'zIndex' in props) {\n        console.warn(Z_INDEX_WARNING);\n        zIndexWarningShowed = true;\n    }\n    // check correct draggable usage\n    if (!dragWarningShowed && props.draggable) {\n        var hasPosition = props.x !== undefined || props.y !== undefined;\n        var hasEvents = props.onDragEnd || props.onDragMove;\n        if (hasPosition && !hasEvents) {\n            console.warn(DRAGGABLE_WARNING);\n            dragWarningShowed = true;\n        }\n    }\n    // check old props\n    // we need to unset properties that are not in new props\n    // and remove all events\n    for (var key in oldProps) {\n        if (propsToSkip[key]) {\n            continue;\n        }\n        var isEvent = key.slice(0, 2) === 'on';\n        var propChanged = oldProps[key] !== props[key];\n        // if that is a changed event, we need to remove it\n        if (isEvent && propChanged) {\n            var eventName = key.substr(2).toLowerCase();\n            if (eventName.substr(0, 7) === 'content') {\n                eventName =\n                    'content' +\n                        eventName.substr(7, 1).toUpperCase() +\n                        eventName.substr(8);\n            }\n            instance.off(eventName, oldProps[key]);\n        }\n        var toRemove = !props.hasOwnProperty(key);\n        if (toRemove) {\n            instance.setAttr(key, undefined);\n        }\n    }\n    var strictUpdate = useStrictMode || props._useStrictMode;\n    var updatedProps = {};\n    var hasUpdates = false;\n    const newEvents = {};\n    for (var key in props) {\n        if (propsToSkip[key]) {\n            continue;\n        }\n        var isEvent = key.slice(0, 2) === 'on';\n        var toAdd = oldProps[key] !== props[key];\n        if (isEvent && toAdd) {\n            var eventName = key.substr(2).toLowerCase();\n            if (eventName.substr(0, 7) === 'content') {\n                eventName =\n                    'content' +\n                        eventName.substr(7, 1).toUpperCase() +\n                        eventName.substr(8);\n            }\n            // check that event is not undefined\n            if (props[key]) {\n                newEvents[eventName] = props[key];\n            }\n        }\n        if (!isEvent &&\n            (props[key] !== oldProps[key] ||\n                (strictUpdate && props[key] !== instance.getAttr(key)))) {\n            hasUpdates = true;\n            updatedProps[key] = props[key];\n        }\n    }\n    if (hasUpdates) {\n        instance.setAttrs(updatedProps);\n        updatePicture(instance);\n    }\n    // subscribe to events AFTER we set attrs\n    // we need it to fix https://github.com/konvajs/react-konva/issues/471\n    // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\n    for (var eventName in newEvents) {\n        instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n    }\n}\nexport function updatePicture(node) {\n    if (!Konva.autoDrawEnabled) {\n        var drawingNode = node.getLayer() || node.getStage();\n        drawingNode && drawingNode.batchDraw();\n    }\n}\n","import Konva from 'konva/lib/Core.js';\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE, } from './makeUpdates.js';\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run, } from 'scheduler';\nimport { \n// NoEventPriority,\nDefaultEventPriority, } from 'react-reconciler/constants.js';\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\n// for react-spring capability\nKonva.Node.prototype._applyProps = applyNodeProps;\n// let currentUpdatePriority: number = NoEventPriority;\nlet currentUpdatePriority = DefaultEventPriority;\nexport function appendInitialChild(parentInstance, child) {\n    if (typeof child === 'string') {\n        // Noop for string children of Text (eg <Text>foo</Text>)\n        console.error(`Do not use plain text as child of Konva.Node. You are using text: ${child}`);\n        return;\n    }\n    parentInstance.add(child);\n    updatePicture(parentInstance);\n}\nexport function createInstance(type, props, internalInstanceHandle) {\n    let NodeClass = Konva[type];\n    if (!NodeClass) {\n        console.error(`Konva has no node with the type ${type}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/${type}\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`);\n        NodeClass = Konva.Group;\n    }\n    // we need to split props into events and non events\n    // we we can pass non events into constructor directly\n    // that way the performance should be better\n    // we we apply change \"applyNodeProps\"\n    // then it will trigger change events on first run\n    // but we don't need them!\n    const propsWithoutEvents = {};\n    const propsWithOnlyEvents = {};\n    for (var key in props) {\n        var isEvent = key.slice(0, 2) === 'on';\n        if (isEvent) {\n            propsWithOnlyEvents[key] = props[key];\n        }\n        else {\n            propsWithoutEvents[key] = props[key];\n        }\n    }\n    const instance = new NodeClass(propsWithoutEvents);\n    applyNodeProps(instance, propsWithOnlyEvents);\n    return instance;\n}\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    console.error(`Text components are not supported for now in ReactKonva. Your text is: \"${text}\"`);\n}\nexport function finalizeInitialChildren(domElement, type, props) {\n    return false;\n}\nexport function getPublicInstance(instance) {\n    return instance;\n}\nexport function prepareForCommit() {\n    return null;\n}\nexport function preparePortalMount() {\n    return null;\n}\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n    return UPDATE_SIGNAL;\n}\nexport function resetAfterCommit() {\n    // Noop\n}\nexport function resetTextContent(domElement) {\n    // Noop\n}\nexport function shouldDeprioritizeSubtree(type, props) {\n    return false;\n}\nexport function getRootHostContext() {\n    return NO_CONTEXT;\n}\nexport function getChildHostContext() {\n    return NO_CONTEXT;\n}\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\nexport function shouldSetTextContent(type, props) {\n    return false;\n}\n// The Konva renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\nexport const warnsIfNotActing = true;\nexport const supportsMutation = true;\nexport const supportsPersistence = false;\nexport const supportsHydration = false;\nexport function appendChild(parentInstance, child) {\n    if (child.parent === parentInstance) {\n        child.moveToTop();\n    }\n    else {\n        parentInstance.add(child);\n    }\n    updatePicture(parentInstance);\n}\nexport function appendChildToContainer(parentInstance, child) {\n    if (child.parent === parentInstance) {\n        child.moveToTop();\n    }\n    else {\n        parentInstance.add(child);\n    }\n    updatePicture(parentInstance);\n}\nexport function insertBefore(parentInstance, child, beforeChild) {\n    // child._remove() will not stop dragging\n    // but child.remove() will stop it, but we don't need it\n    // removing will reset zIndexes\n    child._remove();\n    parentInstance.add(child);\n    child.setZIndex(beforeChild.getZIndex());\n    updatePicture(parentInstance);\n}\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n    insertBefore(parentInstance, child, beforeChild);\n}\nexport function removeChild(parentInstance, child) {\n    child.destroy();\n    child.off(EVENTS_NAMESPACE);\n    updatePicture(parentInstance);\n}\nexport function removeChildFromContainer(parentInstance, child) {\n    child.destroy();\n    child.off(EVENTS_NAMESPACE);\n    updatePicture(parentInstance);\n}\nexport function commitTextUpdate(textInstance, oldText, newText) {\n    console.error(`Text components are not yet supported in ReactKonva. You text is: \"${newText}\"`);\n}\nexport function commitMount(instance, type, newProps) {\n    // Noop\n}\nexport function commitUpdate(instance, type, oldProps, newProps) {\n    applyNodeProps(instance, newProps, oldProps);\n}\nexport function hideInstance(instance) {\n    instance.hide();\n    updatePicture(instance);\n}\nexport function hideTextInstance(textInstance) {\n    // Noop\n}\nexport function unhideInstance(instance, props) {\n    if (props.visible == null || props.visible) {\n        instance.show();\n    }\n}\nexport function unhideTextInstance(textInstance, text) {\n    // Noop\n}\nexport function clearContainer(container) {\n    // Noop\n}\nexport function detachDeletedInstance() { }\nexport function getCurrentEventPriority() {\n    return currentUpdatePriority;\n}\nexport function prepareScopeUpdate() { }\nexport function getInstanceFromScope() {\n    return null;\n}\nexport function setCurrentUpdatePriority(newPriority) {\n    currentUpdatePriority = newPriority;\n}\nexport function getCurrentUpdatePriority() {\n    return currentUpdatePriority;\n}\nexport function resolveUpdatePriority() {\n    return currentUpdatePriority || DefaultEventPriority;\n}\nexport function shouldAttemptEagerTransition() {\n    return false;\n}\nexport function requestPostPaintCallback() { }\nexport function maySuspendCommit() {\n    return false;\n}\nexport function preloadInstance() {\n    return true;\n}\nexport function startSuspendingCommit() { }\nexport function suspendInstance() { }\nexport function waitForCommitToBeReady() {\n    return null;\n}\nexport const NotPendingTransition = null;\nexport function resetFormInstance() { }\n","/**\n * Based on ReactArt.js\n * Copyright (c) 2017-present Lavrenov Anton.\n * All rights reserved.\n *\n * MIT\n */\n'use strict';\nimport React from 'react';\nimport Konva from 'konva/lib/Core.js';\nimport ReactFiberReconciler from 'react-reconciler';\nimport { ConcurrentRoot } from 'react-reconciler/constants.js';\nimport * as HostConfig from './ReactKonvaHostConfig.js';\nimport { applyNodeProps, toggleStrictMode } from './makeUpdates.js';\nimport { useContextBridge, FiberProvider } from 'its-fine';\nfunction usePrevious(value) {\n    const ref = React.useRef({});\n    React.useLayoutEffect(() => {\n        ref.current = value;\n    });\n    React.useLayoutEffect(() => {\n        return () => {\n            // when using suspense it is possible that stage is unmounted\n            // but React still keep component ref\n            // in that case we need to manually flush props\n            // we have a special test for that\n            ref.current = {};\n        };\n    }, []);\n    return ref.current;\n}\nconst StageWrap = (props) => {\n    const container = React.useRef(null);\n    const stage = React.useRef(null);\n    const fiberRef = React.useRef(null);\n    const oldProps = usePrevious(props);\n    const Bridge = useContextBridge();\n    const _setRef = (stage) => {\n        const { forwardedRef } = props;\n        if (!forwardedRef) {\n            return;\n        }\n        if (typeof forwardedRef === 'function') {\n            forwardedRef(stage);\n        }\n        else {\n            forwardedRef.current = stage;\n        }\n    };\n    React.useLayoutEffect(() => {\n        stage.current = new Konva.Stage({\n            width: props.width,\n            height: props.height,\n            container: container.current,\n        });\n        _setRef(stage.current);\n        // @ts-ignore\n        fiberRef.current = KonvaRenderer.createContainer(stage.current, ConcurrentRoot, null, false, null, '', console.error, console.error, console.error, null);\n        KonvaRenderer.updateContainer(React.createElement(Bridge, {}, props.children), fiberRef.current, null, () => { });\n        return () => {\n            if (!Konva.isBrowser) {\n                return;\n            }\n            _setRef(null);\n            KonvaRenderer.updateContainer(null, fiberRef.current, null);\n            stage.current.destroy();\n        };\n    }, []);\n    React.useLayoutEffect(() => {\n        _setRef(stage.current);\n        applyNodeProps(stage.current, props, oldProps);\n        KonvaRenderer.updateContainer(React.createElement(Bridge, {}, props.children), fiberRef.current, null);\n    });\n    return React.createElement('div', {\n        ref: container,\n        id: props.id,\n        accessKey: props.accessKey,\n        className: props.className,\n        role: props.role,\n        style: props.style,\n        tabIndex: props.tabIndex,\n        title: props.title,\n    });\n};\nexport const Layer = 'Layer';\nexport const FastLayer = 'FastLayer';\nexport const Group = 'Group';\nexport const Label = 'Label';\nexport const Rect = 'Rect';\nexport const Circle = 'Circle';\nexport const Ellipse = 'Ellipse';\nexport const Wedge = 'Wedge';\nexport const Line = 'Line';\nexport const Sprite = 'Sprite';\nexport const Image = 'Image';\nexport const Text = 'Text';\nexport const TextPath = 'TextPath';\nexport const Star = 'Star';\nexport const Ring = 'Ring';\nexport const Arc = 'Arc';\nexport const Tag = 'Tag';\nexport const Path = 'Path';\nexport const RegularPolygon = 'RegularPolygon';\nexport const Arrow = 'Arrow';\nexport const Shape = 'Shape';\nexport const Transformer = 'Transformer';\n// @ts-ignore\nexport const KonvaRenderer = ReactFiberReconciler(HostConfig);\nKonvaRenderer.injectIntoDevTools({\n    // @ts-ignore\n    findHostInstanceByFiber: () => null,\n    bundleType: process.env.NODE_ENV !== 'production' ? 1 : 0,\n    version: React.version,\n    rendererPackageName: 'react-konva',\n});\n// Update Stage component declaration\nexport const Stage = React.forwardRef((props, ref) => {\n    return React.createElement(FiberProvider, {}, React.createElement(StageWrap, { ...props, forwardedRef: ref }));\n});\nexport const useStrictMode = toggleStrictMode;\n"],"names":["propsToSkip","zIndexWarningShowed","dragWarningShowed","EVENTS_NAMESPACE","useStrictMode","toggleStrictMode","value","DRAGGABLE_WARNING","Z_INDEX_WARNING","EMPTY_PROPS","applyNodeProps","instance","props","oldProps","hasPosition","hasEvents","key","isEvent","propChanged","eventName","toRemove","strictUpdate","updatedProps","hasUpdates","newEvents","toAdd","updatePicture","node","Konva","drawingNode","NO_CONTEXT","UPDATE_SIGNAL","currentUpdatePriority","DefaultEventPriority","appendInitialChild","parentInstance","child","createInstance","type","internalInstanceHandle","NodeClass","propsWithoutEvents","propsWithOnlyEvents","createTextInstance","text","rootContainerInstance","finalizeInitialChildren","domElement","getPublicInstance","prepareForCommit","preparePortalMount","prepareUpdate","newProps","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","scheduleTimeout","cancelTimeout","noTimeout","shouldSetTextContent","isPrimaryRenderer","warnsIfNotActing","supportsMutation","supportsPersistence","supportsHydration","appendChild","appendChildToContainer","insertBefore","beforeChild","insertInContainerBefore","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitMount","commitUpdate","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","clearContainer","container","detachDeletedInstance","getCurrentEventPriority","prepareScopeUpdate","getInstanceFromScope","setCurrentUpdatePriority","newPriority","getCurrentUpdatePriority","resolveUpdatePriority","shouldAttemptEagerTransition","requestPostPaintCallback","maySuspendCommit","preloadInstance","startSuspendingCommit","suspendInstance","waitForCommitToBeReady","NotPendingTransition","resetFormInstance","usePrevious","ref","React","StageWrap","stage","fiberRef","Bridge","useContextBridge","_setRef","forwardedRef","KonvaRenderer","ConcurrentRoot","Layer","FastLayer","Group","Label","Rect","Circle","Ellipse","Wedge","Line","Sprite","Image","Text","TextPath","Star","Ring","Arc","Tag","Path","RegularPolygon","Arrow","Shape","Transformer","ReactFiberReconciler","HostConfig","Stage","FiberProvider"],"mappings":"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","x_google_ignoreList":[0,1,2]}